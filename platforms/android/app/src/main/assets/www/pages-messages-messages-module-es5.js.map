{"version":3,"sources":["./src/pages/messages/components/message/message.component.html","./src/pages/messages/components/messages/messages.component.html","./src/pages/messages/components/message/message.component.scss","./src/pages/messages/components/message/message.component.ts","./src/pages/messages/components/messages/messages.component.scss","./src/pages/messages/components/messages/messages.component.ts","./src/pages/messages/messages.module.ts","./src/pages/messages/models/message.ts","./src/pages/messages/services/messages/messages.service.ts"],"names":[],"mappings":"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","file":"pages-messages-messages-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar mode=\\\"md\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button size=\\\"small\\\" color=\\\"dark\\\" (click)=\\\"closeModal(null, routes.messages)\\\">\\n        <ion-icon src=\\\"assets/icons/arrow-left.svg\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button color=\\\"dark\\\" (click)=\\\"call()\\\">\\n        <ion-icon src=\\\"assets/icons/phone.svg\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title\\n      ><span>\\n        <div class=\\\"title-img\\\" [image-loader]=\\\"getSender(message)?.photoURL\\\"></div>\\n        {{ getSender(message)?.displayName }}\\n      </span></ion-title\\n    >\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <div class=\\\"content-wrapper\\\" *ngIf=\\\"currentUser\\\">\\n    <ng-container *ngIf=\\\"message && message.messages && message.messages.length\\\">\\n      <div\\n        [id]=\\\"last ? 'last-item' : 'item' + i\\\"\\n        *ngFor=\\\"let item of message.messages; let i = index; let last = last\\\"\\n        (press)=\\\"onMessageHold(item)\\\"\\n      >\\n        <div [ngClass]=\\\"item.uid === currentUser.uid ? 'from-me' : 'from-them'\\\">\\n          <!-- message image -->\\n          <div\\n            class=\\\"image\\\"\\n            (click)=\\\"preview(item.images[0])\\\"\\n            *ngIf=\\\"item.images && item.images.length === 1\\\"\\n            [image-loader]=\\\"item.images[0]\\\"\\n          ></div>\\n\\n          <!-- message image group -->\\n          <div class=\\\"image-group\\\" *ngIf=\\\"item.images && item.images.length > 1\\\">\\n            <div class=\\\"image-group-image\\\" (click)=\\\"preview(image)\\\" *ngFor=\\\"let image of item.images\\\" [image-loader]=\\\"image\\\"></div>\\n          </div>\\n\\n          <!-- message content -->\\n          <div\\n            *ngIf=\\\"item.value\\\"\\n            class=\\\"text\\\"\\n            [innerHTML]=\\\"item.value.length > 100 && !item.readMore ? (item.value | slice: 0:100) : (item.value | markdown)\\\"\\n          >\\n            <!-- read more anchor link -->\\n            <small>\\n              <a *ngIf=\\\"item.value && item.value.length > 100\\\" (click)=\\\"item.readMore = !item.readMore\\\">\\n                {{ 'message-component.read-more' | translate }}\\n              </a>\\n            </small>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"clear\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <app-no-data [config]=\\\"noDataconfig\\\" *ngIf=\\\"message && message.messages && message.messages.length === 0\\\"> </app-no-data>\\n  </div>\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-toolbar class=\\\"custom-form\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button class=\\\"circle\\\" fill=\\\"clear\\\" color=\\\"primary\\\" (click)=\\\"sendPhoto()\\\">\\n        <ion-icon src=\\\"assets/icons/camera.svg\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n\\n    <textarea\\n      autosize\\n      maxrow=\\\"4\\\"\\n      useImportant=\\\"true\\\"\\n      name=\\\"message\\\"\\n      placeholder=\\\"{{ 'message-component.placeholder' | translate }}\\\"\\n      [(ngModel)]=\\\"textMsg\\\"\\n    ></textarea>\\n\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button class=\\\"circle\\\" fill=\\\"clear\\\" color=\\\"primary\\\" (click)=\\\"send(textMsg)\\\">\\n        <ion-icon src=\\\"assets/icons/send.svg\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-footer>\\n\\n<!-- <app-spinner *ngIf=\\\"loading\\\"></app-spinner> -->\\n\\n<!-- required for browser file upload -->\\n<input hidden #fileInputButton type=\\\"file\\\" (change)=\\\"detectFiles($event)\\\" multiple />\\n\\n<!-- call user with hidden a tag -->\\n<a hidden #callNumber href=\\\"tel:+{{ getSender(message)?.mobile || getSender(message)?.phone }}\\\"></a>\\n\"","module.exports = \"<ion-toolbar>\\n  <ion-buttons slot=\\\"start\\\">\\n    <ion-menu-button size=\\\"small\\\" autoHide=\\\"true\\\"></ion-menu-button>\\n  </ion-buttons>\\n</ion-toolbar>\\n\\n<ion-content scrollX=\\\"false\\\" scrollY=\\\"false\\\">\\n  <div class=\\\"content-wrapper\\\">\\n    <!-- start header -->\\n    <div class=\\\"header no-border has-toolbar\\\">\\n      <div class=\\\"title\\\">\\n        {{ 'messages-component.title' | translate }}\\n      </div>\\n      <div class=\\\"options\\\">\\n        <ion-button fill=\\\"clear\\\" size=\\\"small\\\" color=\\\"medium\\\" (click)=\\\"openSearch = !openSearch\\\">\\n          <ion-icon mode=\\\"md\\\" name=\\\"search\\\"></ion-icon>\\n        </ion-button>\\n        <ion-button fill=\\\"clear\\\" size=\\\"small\\\" color=\\\"medium\\\" (click)=\\\"messagesOptions()\\\">\\n          <ion-icon mode=\\\"md\\\" name=\\\"more\\\"></ion-icon>\\n        </ion-button>\\n      </div>\\n    </div>\\n    <!-- end header -->\\n\\n    <app-tab-menu [tabs]=\\\"views\\\"></app-tab-menu>\\n    <app-search-bar *ngIf=\\\"openSearch\\\" (event)=\\\"onSearch($event)\\\"></app-search-bar>\\n\\n    <!-- show messages -->\\n    <div class=\\\"content-scroll\\\" *ngIf=\\\"messages.length > 0\\\">\\n      <div class=\\\"messages\\\" *ngFor=\\\"let item of messages\\\">\\n        <!-- selected icon toggle -->\\n        <div class=\\\"action\\\" *ngIf=\\\"getSelection\\\">\\n          <ion-icon\\n            color=\\\"secondary\\\"\\n            (click)=\\\"item.selected = !item.selected\\\"\\n            [src]=\\\"item.selected ? 'assets/icons/check-square.svg' : 'assets/icons/square.svg'\\\"\\n          ></ion-icon>\\n        </div>\\n\\n        <!-- image of receipeint -->\\n        <div\\n          class=\\\"image\\\"\\n          [image-loader]=\\\"getSender(item).photoURL\\\"\\n          (click)=\\\"goto(routes.people, { queryParams: { id: getSender(item).uid } })\\\"\\n        ></div>\\n\\n        <!-- details of chat -->\\n        <div class=\\\"detail\\\" (click)=\\\"openChat(item.id)\\\">\\n          <div class=\\\"name\\\">{{ getSender(item).displayName }}</div>\\n          <div class=\\\"msg\\\">{{ getLastMessage(item)?.value || 'messages-component.start-chatting' | translate }}</div>\\n        </div>\\n\\n        <!--  date and actions button -->\\n        <div class=\\\"date\\\">\\n          <span>{{ item?.updatedAt?.toDate() | amTimeAgo }}</span>\\n          <ion-button fill=\\\"clear\\\" *ngIf=\\\"!getSelection\\\" (click)=\\\"options(item)\\\" color=\\\"medium\\\" size=\\\"small\\\">\\n            <ion-icon name=\\\"more\\\"></ion-icon>\\n          </ion-button>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <app-no-data *ngIf=\\\"messages.length === 0\\\"></app-no-data>\\n  </div>\\n</ion-content>\\n\\n<!-- footer with buttons when you select more than one item -->\\n<ion-footer *ngIf=\\\"getSelection\\\">\\n  <div class=\\\"buttons\\\">\\n    <ion-button size=\\\"small\\\" (click)=\\\"markAsRead()\\\">Mark as Read</ion-button>\\n    <ion-button size=\\\"small\\\" (click)=\\\"archieve()\\\" color=\\\"secondary\\\">Archieve</ion-button>\\n    <ion-button size=\\\"small\\\" (click)=\\\"deleteSelected()\\\" color=\\\"danger\\\">Delete</ion-button>\\n    <ion-button (click)=\\\"getSelection = false\\\" color=\\\"dark\\\" fill=\\\"clear\\\">\\n      <ion-icon src=\\\"assets/icons/x.svg\\\"></ion-icon>\\n    </ion-button>\\n  </div>\\n</ion-footer>\\n\"","module.exports = \":host .title-img {\\n  width: 30px;\\n  height: 30px;\\n  border-radius: 50%;\\n  background-size: contain !important;\\n  background-color: var(--ion-color-light-shade);\\n  margin-right: 10px;\\n  border: 1px solid var(--ion-color-light-shade);\\n}\\n:host .clear {\\n  clear: both;\\n}\\n:host .content-wrapper {\\n  height: 100%;\\n}\\n:host .content-wrapper .from-me,\\n:host .content-wrapper .from-them {\\n  position: relative;\\n  border-radius: 1em;\\n  margin: 10px 0;\\n  overflow: hidden;\\n}\\n:host .content-wrapper .from-me .image,\\n:host .content-wrapper .from-them .image {\\n  width: 200px;\\n  height: 200px;\\n}\\n:host .content-wrapper .from-me .image-group,\\n:host .content-wrapper .from-them .image-group {\\n  display: grid;\\n  grid-template-columns: repeat(2, 1fr);\\n  grid-auto-rows: auto;\\n  grid-gap: 0.5rem;\\n  padding: 10px 10px 5px;\\n  border-top-left-radius: 1em;\\n}\\n:host .content-wrapper .from-me .image-group .image-group-image,\\n:host .content-wrapper .from-them .image-group .image-group-image {\\n  height: 100px;\\n  width: 100px;\\n  border: 1px solid var(--ion-color-medium);\\n  border-radius: 1em;\\n}\\n:host .content-wrapper .from-me .text,\\n:host .content-wrapper .from-them .text {\\n  padding: 10px 20px;\\n  margin: 0;\\n}\\n:host .content-wrapper .from-me .text ::ng-deep p,\\n:host .content-wrapper .from-them .text ::ng-deep p {\\n  margin: 0;\\n}\\n:host .content-wrapper .from-me .text ::ng-deep a,\\n:host .content-wrapper .from-them .text ::ng-deep a {\\n  color: var(--ion-color-primary);\\n}\\n:host .content-wrapper .from-me {\\n  color: var(--ion-color-dark);\\n  background: var(--ion-color-light-shade);\\n  border-top-right-radius: 0px;\\n  float: right;\\n}\\n:host .content-wrapper .from-them {\\n  background: var(--ion-color-gradient);\\n  border-top-left-radius: 0px;\\n  color: var(--ion-color-light);\\n  float: left;\\n}\\n:host ion-footer textarea {\\n  padding: 5px 10px;\\n  overflow: hidden;\\n  height: 40px !important;\\n  width: calc(100% - 20px);\\n  border: 1px solid var(--ion-color-medium);\\n  outline: none;\\n  resize: none;\\n  margin: 5px 10px 0px;\\n  border-radius: 3px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9wYWdlcy9tZXNzYWdlcy9jb21wb25lbnRzL21lc3NhZ2UvQzpcXFVzZXJzXFxkZDQyNFxcZGVza3RvcFxcRGV2ZWxvcFxcZXp5YXBwc191ay1jb21wbGV0ZS1maXJlLXN0YXJ0ZXItYzYyOGQzZmMxZmRlL3NyY1xccGFnZXNcXG1lc3NhZ2VzXFxjb21wb25lbnRzXFxtZXNzYWdlXFxtZXNzYWdlLmNvbXBvbmVudC5zY3NzIiwic3JjL3BhZ2VzL21lc3NhZ2VzL2NvbXBvbmVudHMvbWVzc2FnZS9tZXNzYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNFO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLG1DQUFBO0VBQ0EsOENBQUE7RUFDQSxrQkFBQTtFQUNBLDhDQUFBO0FDQUo7QURFRTtFQUNFLFdBQUE7QUNBSjtBREdFO0VBQ0UsWUFBQTtBQ0RKO0FER0k7O0VBRUUsa0JBQUE7RUFDQSxrQkFBQTtFQUNBLGNBQUE7RUFDQSxnQkFBQTtBQ0ROO0FER007O0VBQ0UsWUFBQTtFQUNBLGFBQUE7QUNBUjtBREdNOztFQUNFLGFBQUE7RUFDQSxxQ0FBQTtFQUNBLG9CQUFBO0VBQ0EsZ0JBQUE7RUFDQSxzQkFBQTtFQUNBLDJCQUFBO0FDQVI7QURFUTs7RUFDRSxhQUFBO0VBQ0EsWUFBQTtFQUNBLHlDQUFBO0VBQ0Esa0JBQUE7QUNDVjtBREdNOztFQUNFLGtCQUFBO0VBQ0EsU0FBQTtBQ0FSO0FER1U7O0VBQ0UsU0FBQTtBQ0FaO0FER1U7O0VBQ0UsK0JBQUE7QUNBWjtBRE1JO0VBQ0UsNEJBQUE7RUFDQSx3Q0FBQTtFQUNBLDRCQUFBO0VBQ0EsWUFBQTtBQ0pOO0FET0k7RUFDRSxxQ0FBQTtFQUNBLDJCQUFBO0VBQ0EsNkJBQUE7RUFDQSxXQUFBO0FDTE47QURVSTtFQUNFLGlCQUFBO0VBQ0EsZ0JBQUE7RUFDQSx1QkFBQTtFQUNBLHdCQUFBO0VBQ0EseUNBQUE7RUFDQSxhQUFBO0VBQ0EsWUFBQTtFQUNBLG9CQUFBO0VBQ0Esa0JBQUE7QUNSTiIsImZpbGUiOiJzcmMvcGFnZXMvbWVzc2FnZXMvY29tcG9uZW50cy9tZXNzYWdlL21lc3NhZ2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gIC50aXRsZS1pbWcge1xuICAgIHdpZHRoOiAzMHB4O1xuICAgIGhlaWdodDogMzBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taW9uLWNvbG9yLWxpZ2h0LXNoYWRlKTtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0taW9uLWNvbG9yLWxpZ2h0LXNoYWRlKTtcbiAgfVxuICAuY2xlYXIge1xuICAgIGNsZWFyOiBib3RoO1xuICB9XG5cbiAgLmNvbnRlbnQtd3JhcHBlciB7XG4gICAgaGVpZ2h0OiAxMDAlO1xuXG4gICAgLmZyb20tbWUsXG4gICAgLmZyb20tdGhlbSB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBib3JkZXItcmFkaXVzOiAxZW07XG4gICAgICBtYXJnaW46IDEwcHggMDtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgICAgIC5pbWFnZSB7XG4gICAgICAgIHdpZHRoOiAyMDBweDtcbiAgICAgICAgaGVpZ2h0OiAyMDBweDtcbiAgICAgIH1cblxuICAgICAgLmltYWdlLWdyb3VwIHtcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMiwgMWZyKTtcbiAgICAgICAgZ3JpZC1hdXRvLXJvd3M6IGF1dG87XG4gICAgICAgIGdyaWQtZ2FwOiAwLjVyZW07XG4gICAgICAgIHBhZGRpbmc6IDEwcHggMTBweCA1cHg7XG4gICAgICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDFlbTtcblxuICAgICAgICAuaW1hZ2UtZ3JvdXAtaW1hZ2Uge1xuICAgICAgICAgIGhlaWdodDogMTAwcHg7XG4gICAgICAgICAgd2lkdGg6IDEwMHB4O1xuICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWlvbi1jb2xvci1tZWRpdW0pO1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDFlbTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAudGV4dCB7XG4gICAgICAgIHBhZGRpbmc6IDEwcHggMjBweDtcbiAgICAgICAgbWFyZ2luOiAwO1xuXG4gICAgICAgIDo6bmctZGVlcCB7XG4gICAgICAgICAgcCB7XG4gICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgYSB7XG4gICAgICAgICAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC5mcm9tLW1lIHtcbiAgICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItZGFyayk7XG4gICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3ItbGlnaHQtc2hhZGUpO1xuICAgICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDBweDtcbiAgICAgIGZsb2F0OiByaWdodDtcbiAgICB9XG5cbiAgICAuZnJvbS10aGVtIHtcbiAgICAgIGJhY2tncm91bmQ6IHZhcigtLWlvbi1jb2xvci1ncmFkaWVudCk7XG4gICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwcHg7XG4gICAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLWxpZ2h0KTtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgIH1cbiAgfVxuXG4gIGlvbi1mb290ZXIge1xuICAgIHRleHRhcmVhIHtcbiAgICAgIHBhZGRpbmc6IDVweCAxMHB4O1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgIGhlaWdodDogNDBweCAhaW1wb3J0YW50O1xuICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDIwcHgpO1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0taW9uLWNvbG9yLW1lZGl1bSk7XG4gICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgcmVzaXplOiBub25lO1xuICAgICAgbWFyZ2luOiA1cHggMTBweCAwcHg7XG4gICAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgfVxuICB9XG59XG4iLCI6aG9zdCAudGl0bGUtaW1nIHtcbiAgd2lkdGg6IDMwcHg7XG4gIGhlaWdodDogMzBweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW4gIWltcG9ydGFudDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taW9uLWNvbG9yLWxpZ2h0LXNoYWRlKTtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1pb24tY29sb3ItbGlnaHQtc2hhZGUpO1xufVxuOmhvc3QgLmNsZWFyIHtcbiAgY2xlYXI6IGJvdGg7XG59XG46aG9zdCAuY29udGVudC13cmFwcGVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuOmhvc3QgLmNvbnRlbnQtd3JhcHBlciAuZnJvbS1tZSxcbjpob3N0IC5jb250ZW50LXdyYXBwZXIgLmZyb20tdGhlbSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYm9yZGVyLXJhZGl1czogMWVtO1xuICBtYXJnaW46IDEwcHggMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbjpob3N0IC5jb250ZW50LXdyYXBwZXIgLmZyb20tbWUgLmltYWdlLFxuOmhvc3QgLmNvbnRlbnQtd3JhcHBlciAuZnJvbS10aGVtIC5pbWFnZSB7XG4gIHdpZHRoOiAyMDBweDtcbiAgaGVpZ2h0OiAyMDBweDtcbn1cbjpob3N0IC5jb250ZW50LXdyYXBwZXIgLmZyb20tbWUgLmltYWdlLWdyb3VwLFxuOmhvc3QgLmNvbnRlbnQtd3JhcHBlciAuZnJvbS10aGVtIC5pbWFnZS1ncm91cCB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XG4gIGdyaWQtYXV0by1yb3dzOiBhdXRvO1xuICBncmlkLWdhcDogMC41cmVtO1xuICBwYWRkaW5nOiAxMHB4IDEwcHggNXB4O1xuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAxZW07XG59XG46aG9zdCAuY29udGVudC13cmFwcGVyIC5mcm9tLW1lIC5pbWFnZS1ncm91cCAuaW1hZ2UtZ3JvdXAtaW1hZ2UsXG46aG9zdCAuY29udGVudC13cmFwcGVyIC5mcm9tLXRoZW0gLmltYWdlLWdyb3VwIC5pbWFnZS1ncm91cC1pbWFnZSB7XG4gIGhlaWdodDogMTAwcHg7XG4gIHdpZHRoOiAxMDBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0taW9uLWNvbG9yLW1lZGl1bSk7XG4gIGJvcmRlci1yYWRpdXM6IDFlbTtcbn1cbjpob3N0IC5jb250ZW50LXdyYXBwZXIgLmZyb20tbWUgLnRleHQsXG46aG9zdCAuY29udGVudC13cmFwcGVyIC5mcm9tLXRoZW0gLnRleHQge1xuICBwYWRkaW5nOiAxMHB4IDIwcHg7XG4gIG1hcmdpbjogMDtcbn1cbjpob3N0IC5jb250ZW50LXdyYXBwZXIgLmZyb20tbWUgLnRleHQgOjpuZy1kZWVwIHAsXG46aG9zdCAuY29udGVudC13cmFwcGVyIC5mcm9tLXRoZW0gLnRleHQgOjpuZy1kZWVwIHAge1xuICBtYXJnaW46IDA7XG59XG46aG9zdCAuY29udGVudC13cmFwcGVyIC5mcm9tLW1lIC50ZXh0IDo6bmctZGVlcCBhLFxuOmhvc3QgLmNvbnRlbnQtd3JhcHBlciAuZnJvbS10aGVtIC50ZXh0IDo6bmctZGVlcCBhIHtcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5KTtcbn1cbjpob3N0IC5jb250ZW50LXdyYXBwZXIgLmZyb20tbWUge1xuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLWRhcmspO1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3ItbGlnaHQtc2hhZGUpO1xuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMHB4O1xuICBmbG9hdDogcmlnaHQ7XG59XG46aG9zdCAuY29udGVudC13cmFwcGVyIC5mcm9tLXRoZW0ge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3ItZ3JhZGllbnQpO1xuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwcHg7XG4gIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItbGlnaHQpO1xuICBmbG9hdDogbGVmdDtcbn1cbjpob3N0IGlvbi1mb290ZXIgdGV4dGFyZWEge1xuICBwYWRkaW5nOiA1cHggMTBweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgaGVpZ2h0OiA0MHB4ICFpbXBvcnRhbnQ7XG4gIHdpZHRoOiBjYWxjKDEwMCUgLSAyMHB4KTtcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0taW9uLWNvbG9yLW1lZGl1bSk7XG4gIG91dGxpbmU6IG5vbmU7XG4gIHJlc2l6ZTogbm9uZTtcbiAgbWFyZ2luOiA1cHggMTBweCAwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbn0iXX0= */\"","import { AfterContentChecked, Component, ElementRef, Injector, OnInit, ViewChild } from '@angular/core';\nimport { NavParams } from '@ionic/angular';\nimport { messages } from 'src/assets/data/message';\nimport { IUser } from 'src/pages/auth/helpers/model';\nimport { AuthService } from 'src/pages/auth/services/auth/auth.service';\nimport { SettingService } from 'src/pages/setting/services/setting/setting.service';\nimport { INoData } from 'src/shared/components/no-data/no-data.component';\nimport { Extender } from 'src/shared/helpers/extender';\nimport { GalleryPickerComponent } from 'src/shared/modals/gallery-picker/gallery-picker.component';\nimport { ImagePreviewComponent } from 'src/shared/modals/image-preview/image-preview.component';\nimport { CommonService } from 'src/shared/services/common/common.service';\nimport { FirestoreService } from 'src/shared/services/firestore/firestore.service';\nimport { CHAT_TYPES, IChat, IMessage } from '../../models/message';\nimport { MessagesService } from '../../services/messages/messages.service';\n\n/**\n * send messages between users. as a user, you can deactivate autoreply in setting page.\n * or remove autoreply method and all calls to it.\n * sending a message updates messages.message property with the latest message.\n * a function in firebase cloud functions checks every message update and sends a push notification to the device\n * check readme for info on cloud functions\n */\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.scss']\n})\nexport class MessageComponent extends Extender implements OnInit, AfterContentChecked {\n  public message: IMessage;\n  public currentUser: IUser;\n  public chat: IChat[] = [];\n  public chatType = CHAT_TYPES;\n  public textMsg: string = '';\n  public images: string[] = [];\n  public sendLoading: boolean;\n  public noDataconfig: INoData = {\n    content: { title: 'Its quite here', description: 'start a conversation' }\n  };\n  @ViewChild('content', null) public content: ElementRef;\n  @ViewChild('callNumber', null) public callNumber: ElementRef;\n  @ViewChild('fileInputButton', null) private fileInputButton: ElementRef;\n\n  constructor(\n    protected injector: Injector,\n    private navParams: NavParams,\n    private authService: AuthService,\n    private commonService: CommonService,\n    private firestoreService: FirestoreService,\n    private messageService: MessagesService,\n    private settingService: SettingService\n  ) {\n    super(injector);\n  }\n\n  public async ngOnInit() {\n    this.loading = true;\n    this.currentUser = await this.authService.getUser();\n    this.subscriptions.push(\n      this.messageService.getMessage(this.navParams.get('data')).subscribe(\n        (msg) => {\n          this.message = msg;\n          this.chat = this.message.messages;\n          this.loading = false;\n        },\n        (err) => {\n          this.loading = false;\n          this.toast(err);\n        }\n      )\n    );\n  }\n\n  /** scroll to bottom when view loads with messages */\n  public ngAfterContentChecked() {\n    this.scrollToBottom();\n  }\n\n  /**\n   * used in template to retrieve details of receiving user for the message\n   * if currentUser's id doesn't match another user in list, get the other users data as a recipient\n   */\n  public getSender(message: IMessage) {\n    return message ? message.participants.find((user: IUser) => user.uid !== this.currentUser.uid) : null;\n  }\n\n  /**\n   * used in template to retrieve details of receiving user for the message\n   * if currentUser's id match another user in list, get the other users data as a recipient\n   */\n  public getRecipient(message: IMessage) {\n    return message ? message.participants.find((user: IUser) => user.uid === this.currentUser.uid) : null;\n  }\n\n  /** call sender user */\n  public call() {\n    this.commonService.callUser(this.getSender(this.message).mobile || this.getSender(this.message).phone, this.callNumber);\n  }\n\n  /** on message press show options is action sheet */\n  public async onMessageHold(data: IChat) {\n    if (data.uid === this.currentUser.uid) {\n      const actionSheet = await this.actionSheetCtrl.create({\n        header: 'Chat Options',\n        buttons: [\n          {\n            text: 'Delete',\n            role: 'Destructive',\n            handler: () => {\n              this.messageService\n                .deleteChat(this.message, data)\n                .then(() => this.scrollToBottom())\n                .catch((err) => this.failPromise(err));\n            }\n          },\n          {\n            text: 'Close',\n            role: 'cancel',\n            handler: () => {}\n          }\n        ]\n      });\n      await actionSheet.present();\n    }\n  }\n\n  /** send message, update uid property of message, this is needed to find the sender id and send notifications to recipients via firebase cloud functions */\n  public send(text: any, images = null) {\n    const data: IChat = {\n      images,\n      value: text,\n      type: this.chatType.TEXT,\n      sendAt: Date.now(),\n      uid: this.currentUser.uid\n    };\n    this.sendLoading = true;\n    if (text) {\n      this.messageService\n        .send({ ...this.message }, data)\n        .then(() => {\n          this.textMsg = '';\n          this.sendLoading = false;\n         // this.autoReply(messages[this.getRandomInt(1, 50)]);\n        })\n        .catch((err) => this.failPromise(err));\n    }\n  }\n\n  /** for browser input file on change, run this method to get base64 string of files\n   * and open gallery modal with the images\n   */\n  public detectFiles(event: any) {\n    this.commonService.getImagesFromFiles(event).then((images) => {\n      this.openGallery(images);\n    });\n  }\n\n  /**\n   * open action sheet with photo upload options, either from camera or library\n   * and run getPictures method\n   */\n  public async sendPhoto() {\n    const actionSheet = await this.actionSheetCtrl.create({\n      header: 'Send Images',\n      buttons: [\n        {\n          text: 'Use Camera',\n          handler: () => {\n            this.getPictures(1);\n          }\n        },\n        {\n          text: 'Use Library',\n          handler: () => {\n            this.getPictures(0, true);\n          }\n        },\n        {\n          text: 'Close',\n          role: 'cancel',\n          handler: () => {}\n        }\n      ]\n    });\n    await actionSheet.present();\n  }\n\n  /** open preview image modal */\n  public async preview(image: string) {\n    const modal = await this.openModal(ImagePreviewComponent, image);\n    modal.present();\n  }\n\n  /** auto reply to message */\n  public autoReply(text: any, images = null) {\n    if (this.settingService.setting.autoReply === true) {\n      setTimeout(() => {\n        const data: IChat = {\n          images,\n          value: text,\n          type: this.chatType.TEXT,\n          sendAt: Date.now(),\n          uid: this.getSender(this.message).uid\n        };\n        this.loading = true;\n        this.messageService\n          .send({ ...this.message }, data)\n          .then(() => (this.loading = false))\n          .catch((err) => this.failPromise(err));\n      }, 6000);\n    }\n  }\n\n  /**\n   * scroll to bottom of chat\n   */\n  public scrollToBottom(): void {\n    const element = document.getElementById('last-item');\n    if (element) {\n      element.scrollIntoView({\n        behavior: 'auto',\n        block: 'end',\n        inline: 'nearest'\n      });\n    }\n  }\n\n  /**\n   * get image using native camera plugin to retrieve from either camera or library of device\n   * param type is a number that specifies whether to get from camera or from library\n   * one image retrieved, upload to firebase storage. if error, display a toast with error message\n   */\n  private async getPictures(type: number, multiple = false) {\n    let imageData = [];\n    this.loading = true;\n\n    if ((window as any).cordova) {\n      // if on device use native plugins\n      imageData = await this.commonService.getPictures(type, multiple);\n      await this.openGallery(imageData);\n    } else {\n      // if on device use browser file upload\n      (this.fileInputButton.nativeElement as HTMLInputElement).click();\n    }\n  }\n\n  /** open gallery with image files, on dismiss modal, get images and upload them */\n  private async openGallery(imageData: any[]) {\n    if (imageData.length > 0) {\n      const modal = await this.openModal(GalleryPickerComponent, imageData, 'custom-modal');\n      await modal.present();\n      const { data } = await modal.onDidDismiss();\n      if (data.images && data.images.length > 0) {\n        this.uploadImage(data.text, data.images);\n      } else {\n        this.toast(this.translate.instant('message.component.no-images-selected'));\n      }\n    }\n    (this.fileInputButton.nativeElement as HTMLInputElement).value = null;\n  }\n\n  /**\n   * append base 64 string to image data, upload image data to firebase storage.\n   * the upload function returns a download data which is then saved to images\n   */\n  private uploadImage(text: string, imageData: string[]) {\n    this.images = imageData;\n    const read$ = [];\n    this.images.forEach((i) => {\n      read$.push(this.firestoreService.uploadImage(i, `${Date.now()}-${this.currentUser.uid}`, 'chat-images'));\n    });\n\n    Promise.all(read$)\n      .then((res) => {\n        this.images = res;\n        this.send(text, this.images);\n        this.loading = false;\n      })\n      .catch((err) => this.failPromise(err));\n  }\n\n  private failPromise = (err: any) => {\n    this.loading = false;\n    this.sendLoading = false;\n    this.toast(err);\n  };\n}\n","module.exports = \":host ion-content .content-wrapper .content-scroll {\\n  padding: 0 20px;\\n}\\n:host ion-content .content-wrapper .content-scroll .messages {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  margin: 20px 0;\\n}\\n:host ion-content .content-wrapper .content-scroll .messages .image {\\n  height: 60px;\\n  width: 60px;\\n  border-radius: 3px;\\n  box-shadow: 1px 1px 12px var(--ion-color-light-shade);\\n}\\n:host ion-content .content-wrapper .content-scroll .messages .detail {\\n  margin-left: 15px;\\n  -webkit-box-flex: 1;\\n          flex: 1;\\n}\\n:host ion-content .content-wrapper .content-scroll .messages .detail .name {\\n  font-weight: 500;\\n  font-size: 16px;\\n}\\n:host ion-content .content-wrapper .content-scroll .messages .detail .msg {\\n  font-size: 14px;\\n  color: var(--ion-color-medium-shade);\\n  white-space: nowrap;\\n  width: 150px;\\n  text-overflow: ellipsis;\\n  overflow: hidden;\\n}\\n:host ion-content .content-wrapper .content-scroll .messages .date {\\n  width: 63px;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  font-size: 10px;\\n  color: var(--ion-color-medium-shade);\\n  overflow: hidden;\\n  white-space: nowrap;\\n}\\n:host ion-content .content-wrapper .content-scroll .messages .action {\\n  margin-right: 15px;\\n}\\n:host ion-footer .buttons {\\n  margin: 5px 0 5px 15px;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n:host ion-footer .buttons ion-button {\\n  width: 100%;\\n}\\n:host ion-footer .buttons ion-button.right {\\n  float: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9wYWdlcy9tZXNzYWdlcy9jb21wb25lbnRzL21lc3NhZ2VzL0M6XFxVc2Vyc1xcZGQ0MjRcXGRlc2t0b3BcXERldmVsb3BcXGV6eWFwcHNfdWstY29tcGxldGUtZmlyZS1zdGFydGVyLWM2MjhkM2ZjMWZkZS9zcmNcXHBhZ2VzXFxtZXNzYWdlc1xcY29tcG9uZW50c1xcbWVzc2FnZXNcXG1lc3NhZ2VzLmNvbXBvbmVudC5zY3NzIiwic3JjL3BhZ2VzL21lc3NhZ2VzL2NvbXBvbmVudHMvbWVzc2FnZXMvbWVzc2FnZXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR007RUFDRSxlQUFBO0FDRlI7QURJUTtFQUNFLG9CQUFBO0VBQUEsYUFBQTtFQUNBLHlCQUFBO1VBQUEsbUJBQUE7RUFDQSxjQUFBO0FDRlY7QURJVTtFQUNFLFlBQUE7RUFDQSxXQUFBO0VBQ0Esa0JBQUE7RUFDQSxxREFBQTtBQ0ZaO0FES1U7RUFDRSxpQkFBQTtFQUNBLG1CQUFBO1VBQUEsT0FBQTtBQ0haO0FES1k7RUFDRSxnQkFBQTtFQUNBLGVBQUE7QUNIZDtBRE1ZO0VBQ0UsZUFBQTtFQUNBLG9DQUFBO0VBQ0EsbUJBQUE7RUFDQSxZQUFBO0VBQ0EsdUJBQUE7RUFDQSxnQkFBQTtBQ0pkO0FEUVU7RUFDRSxXQUFBO0VBQ0Esb0JBQUE7RUFBQSxhQUFBO0VBQ0EsNEJBQUE7RUFBQSw2QkFBQTtVQUFBLHNCQUFBO0VBQ0EsZUFBQTtFQUNBLG9DQUFBO0VBQ0EsZ0JBQUE7RUFDQSxtQkFBQTtBQ05aO0FEUVU7RUFDRSxrQkFBQTtBQ05aO0FEYUk7RUFDRSxzQkFBQTtFQUNBLG9CQUFBO0VBQUEsYUFBQTtFQUNBLHlCQUFBO1VBQUEsbUJBQUE7QUNYTjtBRFlNO0VBQ0UsV0FBQTtBQ1ZSO0FEV1E7RUFDRSxZQUFBO0FDVFYiLCJmaWxlIjoic3JjL3BhZ2VzL21lc3NhZ2VzL2NvbXBvbmVudHMvbWVzc2FnZXMvbWVzc2FnZXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gIGlvbi1jb250ZW50IHtcbiAgICAuY29udGVudC13cmFwcGVyIHtcbiAgICAgIC5jb250ZW50LXNjcm9sbCB7XG4gICAgICAgIHBhZGRpbmc6IDAgMjBweDtcblxuICAgICAgICAubWVzc2FnZXMge1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBtYXJnaW46IDIwcHggMDtcblxuICAgICAgICAgIC5pbWFnZSB7XG4gICAgICAgICAgICBoZWlnaHQ6IDYwcHg7XG4gICAgICAgICAgICB3aWR0aDogNjBweDtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDFweCAxcHggMTJweCB2YXIoLS1pb24tY29sb3ItbGlnaHQtc2hhZGUpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC5kZXRhaWwge1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDE1cHg7XG4gICAgICAgICAgICBmbGV4OiAxO1xuXG4gICAgICAgICAgICAubmFtZSB7XG4gICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLm1zZyB7XG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgICAgICAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1tZWRpdW0tc2hhZGUpO1xuICAgICAgICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICAgICAgICB3aWR0aDogMTUwcHg7XG4gICAgICAgICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIC5kYXRlIHtcbiAgICAgICAgICAgIHdpZHRoOiA2M3B4O1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICBmb250LXNpemU6IDEwcHg7XG4gICAgICAgICAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLW1lZGl1bS1zaGFkZSk7XG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICAgICAgICB9XG4gICAgICAgICAgLmFjdGlvbiB7XG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGlvbi1mb290ZXIge1xuICAgIC5idXR0b25zIHtcbiAgICAgIG1hcmdpbjogNXB4IDAgNXB4IDE1cHg7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGlvbi1idXR0b24ge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgJi5yaWdodCB7XG4gICAgICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCI6aG9zdCBpb24tY29udGVudCAuY29udGVudC13cmFwcGVyIC5jb250ZW50LXNjcm9sbCB7XG4gIHBhZGRpbmc6IDAgMjBweDtcbn1cbjpob3N0IGlvbi1jb250ZW50IC5jb250ZW50LXdyYXBwZXIgLmNvbnRlbnQtc2Nyb2xsIC5tZXNzYWdlcyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbjogMjBweCAwO1xufVxuOmhvc3QgaW9uLWNvbnRlbnQgLmNvbnRlbnQtd3JhcHBlciAuY29udGVudC1zY3JvbGwgLm1lc3NhZ2VzIC5pbWFnZSB7XG4gIGhlaWdodDogNjBweDtcbiAgd2lkdGg6IDYwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgYm94LXNoYWRvdzogMXB4IDFweCAxMnB4IHZhcigtLWlvbi1jb2xvci1saWdodC1zaGFkZSk7XG59XG46aG9zdCBpb24tY29udGVudCAuY29udGVudC13cmFwcGVyIC5jb250ZW50LXNjcm9sbCAubWVzc2FnZXMgLmRldGFpbCB7XG4gIG1hcmdpbi1sZWZ0OiAxNXB4O1xuICBmbGV4OiAxO1xufVxuOmhvc3QgaW9uLWNvbnRlbnQgLmNvbnRlbnQtd3JhcHBlciAuY29udGVudC1zY3JvbGwgLm1lc3NhZ2VzIC5kZXRhaWwgLm5hbWUge1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXNpemU6IDE2cHg7XG59XG46aG9zdCBpb24tY29udGVudCAuY29udGVudC13cmFwcGVyIC5jb250ZW50LXNjcm9sbCAubWVzc2FnZXMgLmRldGFpbCAubXNnIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLW1lZGl1bS1zaGFkZSk7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHdpZHRoOiAxNTBweDtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG46aG9zdCBpb24tY29udGVudCAuY29udGVudC13cmFwcGVyIC5jb250ZW50LXNjcm9sbCAubWVzc2FnZXMgLmRhdGUge1xuICB3aWR0aDogNjNweDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgZm9udC1zaXplOiAxMHB4O1xuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLW1lZGl1bS1zaGFkZSk7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59XG46aG9zdCBpb24tY29udGVudCAuY29udGVudC13cmFwcGVyIC5jb250ZW50LXNjcm9sbCAubWVzc2FnZXMgLmFjdGlvbiB7XG4gIG1hcmdpbi1yaWdodDogMTVweDtcbn1cbjpob3N0IGlvbi1mb290ZXIgLmJ1dHRvbnMge1xuICBtYXJnaW46IDVweCAwIDVweCAxNXB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuOmhvc3QgaW9uLWZvb3RlciAuYnV0dG9ucyBpb24tYnV0dG9uIHtcbiAgd2lkdGg6IDEwMCU7XG59XG46aG9zdCBpb24tZm9vdGVyIC5idXR0b25zIGlvbi1idXR0b24ucmlnaHQge1xuICBmbG9hdDogcmlnaHQ7XG59Il19 */\"","import { Component, Injector, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { switchMap } from 'rxjs/internal/operators/switchMap';\nimport { IUser } from 'src/pages/auth/helpers/model';\nimport { AuthService } from 'src/pages/auth/services/auth/auth.service';\nimport { Extender } from 'src/shared/helpers/extender';\nimport { IChat, IMessage } from '../../models/message';\nimport { MessagesService } from '../../services/messages/messages.service';\nimport { MessageComponent } from '../message/message.component';\n\n/**\n * view users messages, manage messages.\n */\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.scss']\n})\nexport class MessagesComponent extends Extender implements OnInit {\n  public allMessages: IMessage[] = [];\n  public messages: IMessage[] = [];\n  public currentUser: IUser;\n  public getSelection: boolean = false;\n  public openSearch: boolean = false;\n  public view$ = new Subject<boolean>();\n  /** get tab data to use as input for app-tab-menu component */\n  public views: IViews[] = [\n    {\n      id: 0,\n      active: true,\n      name: this.translate.instant('messages-component.tab-all'),\n      event: () => {\n        this.view$.next(false);\n      }\n    },\n    {\n      id: 2,\n      name: this.translate.instant('messages-component.tab-archived'),\n      event: () => {\n        this.view$.next(true);\n      }\n    }\n  ];\n\n  constructor(protected injector: Injector, private authService: AuthService, private messageService: MessagesService) {\n    super(injector);\n  }\n\n  /**\n   * subscribe to view change events from tab component changes,\n   * create a switch map to get data based on view change\n   * if isArchieved view is clicked show archieved messages\n   * emit event for no archieved messages on initialization\n   */\n  public async ngOnInit() {\n    this.currentUser = await this.authService.getUser();\n    const queryObservable = this.view$.pipe(switchMap((view) => this.messageService.getMessages(this.currentUser.uid, view)));\n    this.subscriptions.push(\n      queryObservable.subscribe((queryItems) => {\n        this.messages = this.allMessages = queryItems;\n      })\n    );\n    this.view$.next(false);\n  }\n\n  /** on view enter, if route contains an id, open chat belonging to that id in a modal straight away */\n  public ionViewDidEnter() {\n    const messageId = this.activatedRoute.snapshot.params && this.activatedRoute.snapshot.params.id;\n\n    if (messageId) {\n      this.openChat(messageId);\n    }\n  }\n\n  /** search messages by participant name */\n  public onSearch(val: string): void {\n    if (val && val.trim() !== '') {\n      this.messages = this.allMessages.filter((item) => {\n        return item.participants.find((user) => user.displayName.toLowerCase().indexOf(val.toLowerCase()) > -1);\n      });\n    } else {\n      this.messages = this.allMessages;\n    }\n  }\n\n  /** used in template to retrieve details of receiving user for the message\n   * if currentUser's id doesn't match another user in list, get the other users data as a recipient\n   */\n  public getSender(message: IMessage) {\n    return message.participants.find((user: IUser) => user.uid !== this.currentUser.uid);\n  }\n\n  /** get last message sent in conversation or default to start chatting */\n  public getLastMessage(message: IMessage): IChat | { value: string } {\n    return message.messages && message.messages.length > 0 ? message.messages[message.messages.length - 1] : null;\n  }\n\n  /** open chat in a model */\n  public async openChat(message: string) {\n    const modal = await this.openModal(MessageComponent, message);\n    modal.present();\n  }\n\n  /** action sheet with options for a single chat,\n   * allow user to mark message as read, archive chat and delete a chat\n   */\n  public async options(chat: IMessage) {\n    const asCtrl = await this.actionSheetCtrl.create({\n      header: this.translate.instant('messages-component.manage-chat'),\n      buttons: [\n        {\n          text: this.translate.instant('messages-component.mark-as-read'),\n          handler: () => {\n            chat.isRead = true;\n            this.messageService.updateMessage(chat);\n          }\n        },\n        {\n          text: this.translate.instant('messages-component.archieved'),\n          handler: () => {\n            chat.isArchieved = true;\n            this.messageService.updateMessage(chat);\n          }\n        },\n        {\n          text: this.translate.instant('messages-component.delete'),\n          handler: () => {\n            this.messageService.deleteMessage(chat);\n          }\n        },\n        {\n          text: this.translate.instant('other.close'),\n          role: 'cancel'\n        }\n      ]\n    });\n    asCtrl.present();\n  }\n\n  /** action sheet with options for selected chat,\n   * allow user to mark message as read, archive chat and delete a chat\n   */\n  public async messagesOptions() {\n    const asCtrl = await this.actionSheetCtrl.create({\n      header: this.translate.instant('messages-component.manage-messages'),\n      buttons: [\n        {\n          text: this.translate.instant('messages-component.select'),\n          handler: () => {\n            this.getSelection = true;\n          }\n        },\n        {\n          text: this.translate.instant('messages-component.select-all'),\n          handler: () => {\n            this.selectAll();\n          }\n        },\n        {\n          text: this.translate.instant('messages-component.delete-all'),\n          handler: () => {\n            this.messageService.deleteAllMessages(this.messages.length);\n          }\n        },\n        {\n          text: this.translate.instant('other.close'),\n          role: 'cancel'\n        }\n      ]\n    });\n    asCtrl.present();\n  }\n\n  /** mark multiple selected messages as read */\n  public markAsRead() {\n    const selected = this.messages.filter((msg) => msg.selected === true);\n    selected.forEach((item) => {\n      item.isRead = true;\n      this.messageService.updateMessage(item);\n    });\n    this.getSelection = false;\n  }\n\n  /** archive multiple messages */\n  public archieve() {\n    const selected = this.messages.filter((msg) => msg.selected === true);\n    selected.forEach((item) => {\n      item.isArchieved = true;\n      this.messageService.updateMessage(item);\n    });\n    this.getSelection = false;\n  }\n\n  /** delete selected messages */\n  public deleteSelected() {\n    const selected = this.messages.filter((msg) => msg.selected === true);\n    selected.forEach((item) => {\n      this.messageService.deleteMessage(item);\n    });\n    this.getSelection = false;\n  }\n\n  /** select all messages */\n  private selectAll() {\n    this.getSelection = true;\n    this.messages.map((message) => {\n      message.selected = true;\n      return message;\n    });\n  }\n}\n\ninterface IViews {\n  id: number;\n  name: string;\n  active?: boolean;\n  event?: any;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from 'src/shared/shared.module';\nimport { MessageComponent } from './components/message/message.component';\nimport { MessagesComponent } from './components/messages/messages.component';\n\n@NgModule({\n  declarations: [MessagesComponent, MessageComponent],\n  entryComponents: [MessageComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: MessagesComponent\n      },\n      {\n        path: ':id',\n        component: MessagesComponent\n      }\n    ])\n  ]\n})\nexport class MessagesModule { }\n","import { IUser } from 'src/pages/auth/helpers/model';\n\nexport interface IMessage {\n  id?: string;\n  participants?: IUser[];\n  participantsId: string[] | number[];\n  createdAt: firebase.firestore.Timestamp;\n  updatedAt: firebase.firestore.Timestamp;\n  isRead?: boolean;\n  isArchieved?: boolean;\n  selected?: boolean;\n  messages: IChat[];\n  uid: string;\n}\n\nexport interface IChat {\n  value: string | string[];\n  images?: string[];\n  imagesUrl?: any[];\n  sendAt: any;\n  type: number;\n  uid: string;\n}\n\nexport enum CHAT_TYPES {\n  TEXT,\n  AUDIO,\n  IMAGE,\n  IMAGE_GROUP,\n}\n","import { Injectable, Injector } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { IUser } from 'src/pages/auth/helpers/model';\nimport { AuthService } from 'src/pages/auth/services/auth/auth.service';\nimport { Extender } from 'src/shared/helpers/extender';\nimport { FirestoreService } from 'src/shared/services/firestore/firestore.service';\nimport { IChat, IMessage } from '../../models/message';\n\n/**\n * crud methods to interact with firebase cloud store regarding messaging\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessagesService extends Extender {\n  constructor(protected injector: Injector, private authService: AuthService, private firestoreService: FirestoreService) {\n    super(injector);\n  }\n\n  /** get messages that contain the users uid in participantsId property, check if message is flagged as archived\n   * for each message get messages recipient and get their details from users collection. return data\n   */\n  public getMessages(uid: string, archieved: boolean = false): Observable<IMessage[]> {\n    return this.firestoreService\n      .colWithIds$<IMessage[]>('messages', (ref: any) =>\n        ref.where('participantsId', 'array-contains', uid).where('isArchieved', '==', archieved)\n      )\n      .pipe(\n        switchMap((data: IMessage[]) => {\n          const reads$ = [];\n          if (data.length > 0) {\n            data.forEach((msg) => {\n              reads$.push(this.getMessage(msg.id));\n            });\n            return combineLatest(reads$);\n          } else {\n            return of([]);\n          }\n        }),\n        map((data: IMessage[]) => {\n          return data;\n        })\n      );\n  }\n\n  /** get message and their participants information */\n  public getMessage(id: string | number): Observable<IMessage> {\n    let data: any;\n    const reads$ = [];\n\n    return this.firestoreService.doc$<IMessage>(`messages/${id}`).pipe(\n      switchMap((msg) => {\n        data = msg;\n        msg.participantsId.forEach((i: any) => {\n          reads$.push(this.firestoreService.doc$<IUser>(`users/${i}`));\n        });\n        return combineLatest(reads$);\n      }),\n      map((joins) => {\n        return { ...data, participants: joins };\n      })\n    );\n  }\n\n  /** update message */\n  public updateMessage(message: IMessage) {\n    return this.firestoreService.update(`messages/${message.id}`, message);\n  }\n\n  /** delete message */\n  public deleteMessage(message: IMessage) {\n    return this.firestoreService.delete(`messages/${message.id}`);\n  }\n\n  /** delete collection of messages */\n  public deleteAllMessages(batch) {\n    return this.firestoreService.deleteCollection(`messages`, batch);\n  }\n\n  /** start chat with a user by first checking if a message already exists with the users id,\n   * if no message exists, create one,\n   * if message exists, navigate to chat modal\n   */\n  public startChat(user: IUser) {\n    this.firestoreService\n      .colWithIds$<IMessage>('messages', (ref: any) => ref.where('participantsId', 'array-contains', user.uid))\n      .subscribe((data) => {\n        const message = data[0];\n        if (!message) {\n          this.createMessage(user);\n        } else {\n          this.goto(`${this.routes.messages}/${message.id}`);\n        }\n      });\n  }\n\n  /** delete a message in chat */\n  public deleteChat(message: IMessage, data: IChat) {\n    return this.firestoreService.update(`messages/${message.id}`, {\n      messages: firebase.firestore.FieldValue.arrayRemove(data)\n    });\n  }\n\n  /** send a message */\n  public send(message: IMessage, data: IChat) {\n    delete message.participants;\n    return this.firestoreService.update(`messages/${message.id}`, {\n      ...message,\n      messages: firebase.firestore.FieldValue.arrayUnion(data)\n    });\n  }\n\n  /** create a message with participants and default messages property to empty array */\n  private async createMessage(user: IUser) {\n    const { uid } = await this.authService.getUser();\n    this.firestoreService.add<IMessage>('messages', {\n      participantsId: [user.uid, uid],\n      messages: [],\n      isArchieved: false\n    });\n  }\n}\n"],"sourceRoot":""}