{"version":3,"sources":["./src/pages/feed/services/feed/feed.service.ts"],"names":[],"mappings":"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","file":"default~pages-feed-feed-module~pages-profile-profile-module-es5.js","sourcesContent":["import { Injectable, Injector } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport { combineLatest, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { AuthService } from 'src/pages/auth/services/auth/auth.service';\nimport { Extender } from 'src/shared/helpers/extender';\nimport { ITabView } from 'src/shared/helpers/models';\nimport { FirestoreService } from 'src/shared/services/firestore/firestore.service';\nimport { isArray } from 'util';\nimport { IComment } from '../../models/comment';\nimport { IFeed } from '../../models/feed';\n\n/**\n * crud methods to interact with firebase cloud store regarding feed posts\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedService extends Extender {\n  public get views(): ITabView[] {\n    return [\n      {\n        id: 1,\n        icon: 'albums',\n        name: this.translate.instant('feed-component.minimal'),\n        active: true\n      },\n      {\n        id: 2,\n        icon: 'paper',\n        name: this.translate.instant('feed-component.timeline')\n      },\n      {\n        id: 3,\n        icon: 'browsers',\n        name: this.translate.instant('feed-component.showcase')\n      },\n      {\n        id: 4,\n        icon: 'cube',\n        name: this.translate.instant('feed-component.modern')\n      }\n    ];\n  }\n  private comments: IComment[];\n  private feed: IFeed[] = [];\n\n  constructor(protected injector: Injector, private authService: AuthService, private firestoreService: FirestoreService) {\n    super(injector);\n  }\n\n  /** get feed from fire base cloud store, set default likes and comments array to empty array if not already set */\n  public getFeed(uid: string) {\n    return this.firestoreService\n      .colWithIds$<IFeed>(`feed`, (ref: any) => ref.orderBy('createdAt', 'desc').limit(50))\n      .pipe(\n        switchMap((_feed: IFeed[]) => {\n          const reads = [];\n          this.feed = _feed.map((item) => {\n            item.likes = !item.likes ? [] : item.likes;\n            item.comments = !item.comments ? [] : item.comments;\n            return item;\n          });\n          this.feed.forEach((item: IFeed) => {\n            reads.push(this.firestoreService.doc$(`users/${item.uid}`));\n          });\n          return combineLatest(reads);\n        }),\n        map((data: any) => {\n          return (this.feed = this.feed.map((item: IFeed, index: number) => {\n            return {\n              ...item,\n              userLiked: item.likes && isArray(item.likes) ? item.likes.includes(uid) : false,\n              user: data[index] || null\n            };\n          }));\n        })\n      );\n  }\n\n  public getUserFeed(uid) {\n    return this.firestoreService.colWithIds$<IFeed>(`feed`, (ref: any) => ref.where('uid', '==', uid));\n  }\n\n  /** get a single post from feed collection in firestore and join its user and comments */\n  public getPost(pid: string, uid: string) {\n    let feed;\n    return this.firestoreService.doc$(`feed/${pid}`).pipe(\n      switchMap((_feed: IFeed) => {\n        _feed.likes = !_feed.likes ? [] : _feed.likes;\n        _feed.comments = !_feed.comments ? [] : _feed.comments;\n        feed = _feed;\n        const docs = [];\n        docs.push(this.firestoreService.doc$(`users/${feed.uid}`));\n        docs.push(this.firestoreService.colWithIds$(`feed/${pid}/comments`, (ref) => ref.where('fid', '==', feed.id)));\n\n        return combineLatest(docs);\n      }),\n      map((arr: any) => {\n        const joins = ['user', 'comments'].reduce((acc, cur, idx) => {\n          return { ...acc, [cur]: arr[idx] };\n        }, {});\n        return { ...feed, ...joins, userLiked: feed.likes && isArray(feed.likes) ? feed.likes.includes(uid) : false };\n      })\n    );\n  }\n\n  public searchFeed(val: string) {\n    const feed = [...this.feed];\n\n    if (val && val.trim() !== '') {\n      return feed.filter((item) => {\n        return (\n          item.title.toLowerCase().indexOf(val.toLowerCase()) > -1 ||\n          item.subtitle.toLowerCase().indexOf(val.toLowerCase()) > -1 ||\n          item.content.toLowerCase().indexOf(val.toLowerCase()) > -1 ||\n          item.user.displayName.toLowerCase().indexOf(val.toLowerCase()) > -1\n        );\n      });\n    } else {\n      return this.feed;\n    }\n  }\n\n  public async upsertPost(post: IFeed) {\n    return await this.firestoreService.set(`feed/${post.id}`, post);\n  }\n\n  public async delete(post: IFeed) {\n    return await this.firestoreService.delete(`feed/${post.id}`);\n  }\n\n  public getComments(fid: string, uid: string) {\n    return this.firestoreService\n      .colWithIds$<IComment>(`feed/${fid}/comments`, (ref: any) => ref.limit(20))\n      .pipe(\n        switchMap((_comment: IComment[]) => {\n          const reads = [];\n          this.comments = _comment;\n          if (this.comments.length > 0) {\n            this.comments.forEach((item: IComment) => {\n              reads.push(this.firestoreService.doc$(`users/${item.uid}`));\n            });\n            return combineLatest(reads);\n          } else {\n            return of([]);\n          }\n        }),\n        map((data: any) => {\n          return (this.comments = this.comments.map((item: IComment, index: number) => {\n            return {\n              ...item,\n              user: data[index] || null\n            };\n          }));\n        })\n      );\n  }\n\n  public searchComments(val: string) {\n    const comments = [...this.comments];\n\n    if (val && val.trim() !== '') {\n      return comments.filter((item) => {\n        return (\n          item.text.toLowerCase().indexOf(val.toLowerCase()) > -1 || item.user.displayName.toLowerCase().indexOf(val.toLowerCase()) > -1\n        );\n      });\n    } else {\n      return this.comments;\n    }\n  }\n\n  public async upsertComment(comment: IComment) {\n    if (!comment.id) {\n      comment.id = this.firestoreService.createId();\n    }\n    if (comment.user) {\n      delete comment.user;\n    }\n    await this.firestoreService.set(`feed/${comment.fid}/comments/${comment.id}`, comment);\n    return this.firestoreService.update(`feed/${comment.fid}`, {\n      comments: firebase.firestore.FieldValue.arrayUnion(comment.id)\n    });\n  }\n\n  public async deleteComment(comment: IComment) {\n    await this.firestoreService.delete(`feed/${comment.fid}/comments/${comment.id}`);\n    return this.firestoreService.update(`feed/${comment.fid}`, {\n      comments: firebase.firestore.FieldValue.arrayRemove(comment.id)\n    });\n  }\n\n  public async like(feed: IFeed) {\n    const { uid } = await this.authService.getUser();\n    if (!feed.userLiked) {\n      this.firestoreService.update(`feed/${feed.id}`, {\n        likes: firebase.firestore.FieldValue.arrayUnion(uid)\n      });\n    } else {\n      this.firestoreService.update(`feed/${feed.id}`, {\n        likes: firebase.firestore.FieldValue.arrayRemove(uid)\n      });\n    }\n  }\n}\n"],"sourceRoot":""}